<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_734544_zendutyv3_retry_table</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>retry_logic</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	
	if (current.count < 10){
		var ms = 10000;
		
		var endSleep = new GlideDuration().getNumericValue() + ms;
		
		while(new GlideDuration().getNumericValue() < endSleep){
			// waiting 
		}
		
		
		var r = new sn_ws.RESTMessageV2();
		r.setEndpoint(current.url);
        
        r.setHttpMethod("POST");
		r.setRequestBody(current.body);
        var response = r.execute();
        var responseBody = response.getBody();
        var httpStatus = response.getStatusCode();
		var requestBody = JSON.parse(current.body);
		
		if (httpStatus > 500){
			current.setValue("count",current.count + 1);
			current.update();
		}
		
		else if ((httpStatus == 200 || httpStatus == 201) && requestBody.state == 1) {
			responseBody = JSON.parse(responseBody);
			var gr = new GlideRecord("x_734544_zendutyv3_incidents");
			gr.initialize();
			gr.message = requestBody.short_description;
			gr.summary = requestBody.description;
			gr.incident_id = requestBody.sys_id;
			gr.zenduty_id = responseBody.unique_id;
			gr.incident_number = responseBody.incident;
			gr.insert();
		}
		
	}
	else{
		current.deleteRecord();
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-12-09 17:17:28</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>15c29dca879441104f8765f73cbb3548</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>retry_logic</sys_name>
        <sys_overrides/>
        <sys_package display_value="Zenduty V3" source="x_734544_zendutyv3">7a51ee59879001104f8765f73cbb359b</sys_package>
        <sys_policy/>
        <sys_scope display_value="Zenduty V3">7a51ee59879001104f8765f73cbb359b</sys_scope>
        <sys_update_name>sys_script_15c29dca879441104f8765f73cbb3548</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-12-13 11:53:14</sys_updated_on>
        <template/>
        <when>async_always</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=15c29dca879441104f8765f73cbb3548"/>
</record_update>
